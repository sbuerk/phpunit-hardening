version: '2.3'
services:
  cgl:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          php -dxdebug.mode=off \
            vendor/bin/php-cs-fixer fix \
              -v \
              ${CGLCHECK_DRY_RUN} \
              --config=Build/php-cs-fixer/php-cs-fixer.php \
              --using-cache=no .
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_host=host.docker.internal\" \
          PHP_CS_FIXER_ALLOW_XDEBUG=1 \
          vendor/bin/php-cs-fixer fix \
            -v \
            ${CGLCHECK_DRY_RUN} \
            --config=Build/php-cs-fixer/php-cs-fixer.php \
            --using-cache=no .
        fi
      "

  composer_update:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    environment:
      COMPOSER_CACHE_DIR: ".cache/composer"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        composer update --no-progress --no-interaction;
      "
  lint:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        find . -name \\*.php ! -path "./vendor/\\*" -print0 | xargs -0 -n1 -P4 php -dxdebug.mode=off -l >/dev/null
      "

  phpstan:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        mkdir -p .cache
        php -v | grep '^PHP';
        php -dxdebug.mode=off vendor/bin/phpstan analyze -c Build/phpstan/phpstan.neon --no-progress
      "
  phpstan_generate_baseline:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        mkdir -p .cache
        php -v | grep '^PHP';
        php -dxdebug.mode=off vendor/bin/phpstan analyze -c Build/phpstan/phpstan.neon --generate-baseline=Build/phpstan/phpstan-baseline.neon
      "

  unit:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          vendor/bin/phpunit -c Build/phpunit/UnitTests.xml --testsuite unit ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_host=host.docker.internal\" \
          vendor/bin/phpunit -c Build/phpunit/UnitTests.xml --testsuite unit ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        fi
      "

  end_to_end:
    image: typo3/core-testing-${DOCKER_PHP_IMAGE}:latest
    user: "${HOST_UID}"
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
        if [ ${SCRIPT_VERBOSE} -eq 1 ]; then
          set -x
        fi
        php -v | grep '^PHP';
        if [ ${PHP_XDEBUG_ON} -eq 0 ]; then
          XDEBUG_MODE=\"off\" \
          vendor/bin/phpunit -c Build/phpunit/UnitTests.xml --testsuite end-to-end ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        else
          XDEBUG_MODE=\"debug,develop\" \
          XDEBUG_TRIGGER=\"foo\" \
          XDEBUG_CONFIG=\"client_host=host.docker.internal\" \
          vendor/bin/phpunit -c Build/phpunit/UnitTests.xml --testsuite end-to-end ${EXTRA_TEST_OPTIONS} ${TEST_FILE};
        fi
      "
